import{_ as s,c as a,o as e,Q as l}from"./chunks/framework.911d3385.js";const D=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"template/template-webpack-protist-js.md"}'),n={name:"template/template-webpack-protist-js.md"},o=l(`<h2 id="webpack-protist-js" tabindex="-1">webpack-protist-js <a class="header-anchor" href="#webpack-protist-js" aria-label="Permalink to &quot;webpack-protist-js&quot;">​</a></h2><h3 id="啥是webpack-protist-js" tabindex="-1">啥是webpack-protist-js ? <a class="header-anchor" href="#啥是webpack-protist-js" aria-label="Permalink to &quot;啥是webpack-protist-js ?&quot;">​</a></h3><p>此模板创建目的以原生js + css + webpack 为基准，模板创造出发点是自己因为时常使用原生html搭建些 练手的小demo，但是又疲于每次F5刷新的不爽 以及部署时项目并没有混淆代码带来的未知注入危险！</p><p>所以一气之下搭建了一个简易的以webpack 热更新原生模板，此模板最大爽点 : 就是入手简单，支持页面热更新，css+js+第三方资源引入热更新，并且使用webpack 带来的高拓展性和安全性的保护！并且带来了</p><p>高度的编译后资源分级，保证运行效果及代表打包后的效果！使用webpack5 带来的优化打包及高拓展性。方便你快速入手webpack5 并上手！</p><p>实乃是想练手原生css骚操作、js奇淫巧技、以原生开发为主的最好伙伴！</p><h3 id="项目引入细节分支" tabindex="-1">项目引入细节分支 <a class="header-anchor" href="#项目引入细节分支" aria-label="Permalink to &quot;项目引入细节分支&quot;">​</a></h3><p><a href="https://github.com/wushijiang13/vue3-vite-cli/tree/0.0.11-beta-webpack-protist-js" target="_blank" rel="noreferrer">webpack-protist-js</a> :<code>创建webpack-protist-js 并支持 hot 热更新</code></p><p><a href="https://github.com/wushijiang13/vue3-vite-cli/tree/0.0.13-bate" target="_blank" rel="noreferrer">0.0.13-bate</a> :<code>更新模板template-webpack-protist-js 优化打包后目录层级和运行时不一致问题，加入文件名加密，文件混淆压缩</code></p><h3 id="项目层级" tabindex="-1">项目层级 <a class="header-anchor" href="#项目层级" aria-label="Permalink to &quot;项目层级&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">提示</p><p>此层级为 webpack-protist-js 模板层级</p></div><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">|-</span><span style="color:#A6ACCD;"> page </span><span style="color:#676E95;font-style:italic;">//项目页面</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">|-</span><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">— index </span><span style="color:#676E95;font-style:italic;">//第一个页面文件</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">|-</span><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">—   </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">— static </span><span style="color:#676E95;font-style:italic;">//资源 包含css + js + 第三方文件 </span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">|-</span><span style="color:#A6ACCD;"> index</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">html </span><span style="color:#676E95;font-style:italic;">//页面 html</span></span>
<span class="line"></span></code></pre></div><hr><h3 id="css引入配置" tabindex="-1">css引入配置 <a class="header-anchor" href="#css引入配置" aria-label="Permalink to &quot;css引入配置&quot;">​</a></h3><p>static 文件夹中 css 为 <code>当前这个页面的所需的css</code><br> index.css 为 <code>默认样式</code></p><h4 id="新增" tabindex="-1">新增 <a class="header-anchor" href="#新增" aria-label="Permalink to &quot;新增&quot;">​</a></h4><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">   </span><span style="color:#676E95;font-style:italic;">//新增 css 文件，以index.css 为例</span></span>
<span class="line"><span style="color:#A6ACCD;">    css </span><span style="color:#676E95;font-style:italic;">//css 文件夹中</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#89DDFF;">|-</span><span style="color:#A6ACCD;"> index</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">css </span><span style="color:#676E95;font-style:italic;">// 创建 index.css</span></span>
<span class="line"></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">提示</p><p>如需监听新加入的css热更新需要引入到webpack 配置的入口文件中</p></div><h4 id="监听热更新-在-index-js" tabindex="-1">监听热更新 在 index.js <a class="header-anchor" href="#监听热更新-在-index-js" aria-label="Permalink to &quot;监听热更新 在 index.js&quot;">​</a></h4><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">//index.js</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">../css/index.css</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">//当模块引入</span></span>
<span class="line"></span></code></pre></div><hr><h3 id="js-引入配置" tabindex="-1">js 引入配置 <a class="header-anchor" href="#js-引入配置" aria-label="Permalink to &quot;js 引入配置&quot;">​</a></h3><p>static 文件夹中 js 为 <code>当前这个页面的所需的js</code><br> index.js 为 webpack 配置的<code>入口文件</code></p><h4 id="新增-1" tabindex="-1">新增 <a class="header-anchor" href="#新增-1" aria-label="Permalink to &quot;新增&quot;">​</a></h4><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">   </span><span style="color:#676E95;font-style:italic;">//新增 js 文件，以index.css 为例</span></span>
<span class="line"><span style="color:#A6ACCD;">    js </span><span style="color:#676E95;font-style:italic;">//js 文件夹中</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#89DDFF;">|-</span><span style="color:#A6ACCD;"> xxx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">js </span><span style="color:#676E95;font-style:italic;">// 创建 xxx.js</span></span>
<span class="line"></span></code></pre></div><h4 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;使用&quot;">​</a></h4><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">//index.js</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">../js/xxx.js</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">//当模块引入</span></span>
<span class="line"></span></code></pre></div><hr><h3 id="图片等第三方引入" tabindex="-1">图片等第三方引入 <a class="header-anchor" href="#图片等第三方引入" aria-label="Permalink to &quot;图片等第三方引入&quot;">​</a></h3><p>无需配置任何直接 引入即可，webpack5 配置 html 变化 和 <code>url-loader</code> 自动监听 更新</p><h3 id="目前包含的webpack5-优化点" tabindex="-1">目前包含的webpack5 优化点 <a class="header-anchor" href="#目前包含的webpack5-优化点" aria-label="Permalink to &quot;目前包含的webpack5 优化点&quot;">​</a></h3><p><input type="checkbox" disabled="disabled" checked> 所有<code>css</code> 代码提取创建新的 <code>css</code> 文件压缩并混淆<br><input type="checkbox" disabled="disabled" checked> 打包后 会对所有html <code>css</code> <code>js</code> <code>img</code> 等文件进行压缩和文件名混淆<br><input type="checkbox" disabled="disabled" checked> 支持 hot 热更新，无刷新更新 <code>css</code> <code>js</code> <code>html</code> <code>img</code> 等<br><input type="checkbox" disabled="disabled" checked> 支持 <code>babel</code> 转换 es 语法代码<br><input type="checkbox" disabled="disabled" checked> 支持 <code>mode</code> 区分环境</p><h2 id="package指令" tabindex="-1">package指令 <a class="header-anchor" href="#package指令" aria-label="Permalink to &quot;package指令&quot;">​</a></h2><h3 id="启动-dev-环境" tabindex="-1">启动 dev 环境 <a class="header-anchor" href="#启动-dev-环境" aria-label="Permalink to &quot;启动 dev 环境&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">dev</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">webpack serve</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><h3 id="启动-prod-环境" tabindex="-1">启动 prod 环境 <a class="header-anchor" href="#启动-prod-环境" aria-label="Permalink to &quot;启动 prod 环境&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">prod</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">webpack serve --mode=production</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><h3 id="编译" tabindex="-1">编译 <a class="header-anchor" href="#编译" aria-label="Permalink to &quot;编译&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">build</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">webpack</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div>`,39),t=[o];function p(c,i,r,d,h,y){return e(),a("div",null,t)}const u=s(n,[["render",p]]);export{D as __pageData,u as default};
